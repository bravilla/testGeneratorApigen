## ConfiguraciÃ³n del servidor ##=
spring.application.name=@artifactId@
spring.application.version=@version@
spring.tomcat.version=@tomcat.version@
java.version=@java.version@
japi.version=@revision@
# Si no se encuentra un mÃ©todo que pueda atender la peticiÃ³n REST, lanza una excepciÃ³n=
spring.mvc.throw-exception-if-no-handler-found=true
# Desactiva la pÃ¡gina de error de Spring en navegadores=
server.error.whitelabel.enabled=false
# Contexto de la aplicaciÃ³n=
server.servlet.context-path=/${spring.application.name}
# Perfil de Spring por defecto si no se especifica ninguno=
spring.profiles.active=desarrollo
# NÃºmero de resultados por defecto para las consultas paginadas (sin usar $limit)=
japi.rest.paginated-request-default-limit=25
# ConfiguraciÃ³n para no devolver nulos en los JSON de respuesta, si hay un nulo, no devuelve la propiedad=
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.fail-on-empty-beans=false
# TamaÃ±os mÃ¡ximos para subidas de ficheros mediante peticiones multipart #=
# Para un fichero individual en una peticiÃ³n multipart=
spring.servlet.multipart.max-file-size=5MB
# Para una peticiÃ³n multipart completa (una peticiÃ³n multipart puede incluir mÃ¡s de un fichero)=
spring.servlet.multipart.max-request-size=10MB
## ConfiguraciÃ³n de la base de datos ##=
# En caso de necesitarse, puede configurarse un esquema comÃºn a todas las entidades=
# y activarse el uso de sinÃ³nimos=
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.default_schema=dba_nopd
spring.jpa.properties.hibernate.synonyms=true
spring.jpa.properties.hibernate.dialect=org.madrid.japi.javaapi.core.datasource.OracleDialectWithRegexSupport
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.jpa.show-sql=false
# Uso de secuencias de la base de datos Oracle para la generaciÃ³n de IDs de Hibernate=
spring.jpa.hibernate.use-new-id-generator-mappings=false
# Paquete a partir del que Hibernate escanearÃ¡ las entidades. Importante que sea vÃ¡lido y correcto=
japi.hibernate.entity-scan-base-package=org.madrid.nopd.rest.personas
# El siguiente bloque de propiedades sÃ³lo se modificarÃ¡ con autorizaciÃ³n de Arquitectura=
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=springBootJPAHikariCP
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.connection-timeout=30000
## ConfiguraciÃ³n de la seguridad ##=
japi.security.jwt.authorization.header-name=X-JWT-Assertion
japi.security.jwt.authorization.parameter-name=access_token
japi.security.active=true
## Excluye de la seguridad los recursos status ##=
japi.security.exclude.url-pattern=/status,/v1/status,/actuator/**
## ConfiguraciÃ³n de los errores ##=
japi.rest.errors.stacktraces.active=false
# NÃºmero de lÃ­neas por defecto a mostrar en las respuestas REST=
japi.rest.errors.stacktraces.limit=10
## ConfiguraciÃ³n del Swagger generado por el servicio rest ##=
# El swagger se genera a partir del cÃ³digo y se expone en la direcciÃ³n indicada=
japi.rest.swagger.version=v1
japi.rest.swagger.description=Generated API
japi.rest.swagger.pagina-inicio=/swagger-ui.html#
spring.resources.add-mappings=true
## Configuracion general del log ##=
logging.level.io.swagger.models.parameters.AbstractSerializableParameter=error
spring.config.location=file:../../config/
debug=false
## Propiedades del Tomcat embebido ##=
# El siguiente bloque de propiedades sÃ³lo se modificarÃ¡ con autorizaciÃ³n de arquitectura=
server.tomcat.connection-timeout=30001
server.tomcat.max-http-form-post-size=6MB
server.tomcat.max-swallow-size=6MB
server.max-http-header-size=9KB
server.tomcat.max-threads=201
server.tomcat.min-spare-threads=26
server.tomcat.remote-ip-header=X-Forwarded-For
server.tomcat.uri-encoding=UTF-8
## Tomcat access log ##=
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.prefix=tomcat_access_log
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
server.tomcat.accesslog.pattern=%h %l %u %{yyyy-MM-dd HH:mm:ss.SSS}t "%r" %s %b %v %T
server.tomcat.accesslog.directory=/usr/aplic_ICM/logs/${spring.application.name}
# En caso de ejecutarse en local desde un Windows, deberÃ¡ usarse la propiedad de abajo=
#server.tomcat.accesslog.directory=c:/usr/aplic_ICM/logs/${spring.application.name}
server.tomcat.accesslog.max-days=7
## ConfiguraciÃ³n de Jolokia ##=
management.endpoints.enabled-by-default=false
management.endpoint.loggers.enabled=true
management.endpoint.configprops.enabled=true
management.endpoint.env.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.jolokia.enabled=true
management.endpoints.web.exposure.include=*,jolokia
## ConfiguraciÃ³n de core-storage-lib ##=
core8.storage.directorio-compartido=/usr/aplic_ICM/compartido/dca_nopd
core8.storage.chunk-size=2MB
## DirecciÃ³n del fichero log4j.properties ##=
#logging.config=./config/log4j2.properties
## Propiedades de la aplicaciÃ³n=
